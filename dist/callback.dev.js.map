{"version":3,"sources":["callback.js"],"names":["myDisplay","myPromise","Promise","resolve","document","getElementById","innerHTML","console","log"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,UAAAA,SADN,GACkB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvCA,YAAAA,OAAO,CAAC,uBAAD,CAAP;AACD,WAFe,CADlB;AAAA;AAAA,0CAIoDF,SAJpD;;AAAA;AAIEG,UAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAJlC;AAKEC,UAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAD,SAAS","sourcesContent":["/*const deliveryPackage = new Promise((resolve, reject) => {\r\n  console.log('Order placed...');\r\n\r\n  setTimeout(() =>{\r\n    let isDelivered = Math.random() > 0.5;\r\n\r\n    if (isDelivered) {\r\n      resolve('Package delivered successfully!') \r\n    } else {\r\n      reject('Package delivery failed!')\r\n    }\r\n  }, 3000)\r\n})\r\n\r\ndeliveryPackage\r\n  .then((message) =>{\r\n    console.log(message);\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n  console.log('Waiting for the package...');*/\r\n\r\nasync function myDisplay() {\r\n  let myPromise = new Promise((resolve) => {\r\n    resolve('Engr. Jian Jayne Osea')\r\n  })\r\n  document.getElementById('demo').innerHTML = await myPromise;\r\n  console.log(myPromise);\r\n}\r\n\r\nmyDisplay();"],"file":"callback.dev.js"}