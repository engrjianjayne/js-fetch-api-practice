{"version":3,"sources":["callback.js"],"names":["myDisplay","myPromise","regeneratorRuntime","async","_context","prev","next","Promise","resolve","awrap","document","getElementById","innerHTML","sent","console","log","stop"],"mappings":"aAwBA,SAAeA,YAAf,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAL,EAAA,IAAAM,QAAA,SAAAC,GAAAA,EAAA,2BAAAJ,EAAAE,KAAA,EAAAJ,mBAAAO,MAAAR,GAAA,KAAA,EAAAS,SAAAC,eAAA,QAAAC,UAAAR,EAAAS,KAAAC,QAAAC,IAAAd,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAY,UAEIR","file":"callback.min.js","sourcesContent":["/*const deliveryPackage = new Promise((resolve, reject) => {\r\n  console.log('Order placed...');\r\n\r\n  setTimeout(() =>{\r\n    let isDelivered = Math.random() > 0.5;\r\n\r\n    if (isDelivered) {\r\n      resolve('Package delivered successfully!') \r\n    } else {\r\n      reject('Package delivery failed!')\r\n    }\r\n  }, 3000)\r\n})\r\n\r\ndeliveryPackage\r\n  .then((message) =>{\r\n    console.log(message);\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n  console.log('Waiting for the package...');*/\r\n\r\nasync function myDisplay() {\r\n  let myPromise = new Promise((resolve) => {\r\n    resolve('Engr. Jian Jayne Osea')\r\n  })\r\n  document.getElementById('demo').innerHTML = await myPromise;\r\n  console.log(myPromise);\r\n}\r\n\r\nmyDisplay();"]}